# vim: set filetype=yaml.ansible :/
- name: "Dotfiles"
  vars:
    dotfiles: "{{ home }}/.dotfiles"
  block:
    - name: Cloning .dotfiles
      ansible.builtin.git:
        repo: "https://github.com/Qwox0/.dotfiles"
        dest: "{{ dotfiles }}"
        recursive: true
        update: true
      ignore_errors: true # skip this step on error

    - name: "Preparing to link .dotfiles"
      vars:
        is_valid_line: "{{ (item | trim)[:1] != '#' }}"
        dest: "{{ item.split(';')[1] | trim | regex_replace('~', home) }}"
        _src: "{{ dotfiles }}/{{ item.split(';')[0] | trim }}"
        src: "{{ _src | realpath }}"
      ansible.builtin.shell: |
        [ -d {{ dest }} -a ! -L {{ dest }} ] && rm -r {{ dest }} && echo "changed";
        [ ! -e {{ dest | dirname }} ] && echo "changed";
        mkdir -p {{ dest | dirname }};
      register: out
      changed_when: "out.stdout | default('') != ''"
      failed_when: "out.stderr | default('') != ''"
      loop: "{{ lookup('ansible.builtin.file', '{{ dotfiles }}/TARGETS').splitlines() }}"
      when: is_valid_line
      loop_control:
        label: "{{ dest }}"

    - name: Linking .dotfiles
      vars:
        is_valid_line: "{{ (item | trim)[:1] != '#' }}"
        dest: "{{ item.split(';')[1] | trim | regex_replace('~', home) }}"
        _src: "{{ dotfiles }}/{{ item.split(';')[0] | trim }}"
        src: "{{ _src | realpath }}"
      ansible.builtin.file:
        dest: "{{ dest }}"
        src: "{{ src }}"
        state: link
        force: true # replace existing files!
      loop: "{{ lookup('ansible.builtin.file', '{{ dotfiles }}/TARGETS').splitlines() }}"
      when: is_valid_line
      loop_control:
        label: "{{ dest }} -> {{ src }}"

  # stow
  # - name: Installing stow
  #   apt:
  #     name: stow
  #   tags:
  #     - dotfiles
  #     - stow
  #
  # - name: Stow dotfiles
  #   shell: cd $HOME/.dotfiles && ./ubuntu
  #   tags:
  #     - dotfiles
  #     - stow
