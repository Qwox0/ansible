# vim: set filetype=yaml.ansible :/
- name: "Dotfiles"
  vars:
    dotfiles: "{{ lookup('env', 'HOME') }}/.dotfiles"
  block:
    - name: Cloning .dotfiles
      ansible.builtin.git:
        repo: "https://github.com/Qwox0/.dotfiles"
        dest: "{{ dotfiles }}"
        recursive: true
        update: true
      ignore_errors: true # skip this step on error

    - name: Linking dotfiles
      vars:
        is_valid_line: "{{ (item | trim)[:1] != '#' }}"
        dest: "{{ lookup('env', 'HOME') }}/{{ item.split(';')[1] | trim }}"
        src: "{{ dotfiles }}/{{ item.split(';')[0] | trim }}"
      ansible.builtin.file:
        dest: "{{ dest }}"
        src: "{{ src }}"
        state: link
        force: true # replace existing files!
      loop: "{{ lookup('ansible.builtin.file', '{{ dotfiles }}/TARGETS').splitlines() }}"
      when: is_valid_line
      loop_control:
        label: "{{ dest }} -> {{ src }}"

    # - name: Finding Dotfile Directories
    #   ansible.builtin.find:
    #     paths: "{{ dotfiles }}"
    #     file_type: "directory"
    #   register: dotfiles_list

    # - name: Linking dotfiles
    #   vars:
    #     dest: "{{ lookup('env', 'HOME') }}/.config/{{ item.path | basename }}"
    #   ansible.builtin.file:
    #     dest: "{{ dest }}"
    #     src: "{{ item.path }}"
    #     state: link
    #   with_items: "{{ dotfiles_list.files }}"
    #   loop_control:
    #     label: "{{ dest }} -> {{ item.path }}"

    # - name: Linking bash config
    #   vars:
    #     dest: "{{ lookup('env', 'HOME') }}/{{ item }}"
    #     src: "{{ dotfiles }}/{{ item }}"
    #   ansible.builtin.file:
    #     dest: "{{ dest }}"
    #     src: "{{ src }}"
    #     state: link
    #     force: true # replace existing files!
    #   loop:
    #     - .bashrc
    #     # - .bash_aliases
    #   loop_control:
    #     label: "{{ dest }} -> {{ src }}"

  # Read target from TARGET file


  # - name: Reading Dotfile Targets
  #   ansible.builtin.script: "{{ item.path }}/TARGET"
  #   with_items: "{{ dotfiles_list.files }}"
  #   loop_control:
  #     label: "{{ item.path }}/TARGET"
  #   register: dotfiles_dest
  #   tags: dotfiles


  # - name: Test link
  #   vars:
  #     src: "{{ item.0.path }}"
  #     # dest: "{{ lookup('file', item.path + '/TARGET') }}"
  #     dest: "{{ item.1.stdout_lines[0] }}"
  #   ansible.builtin.debug:
  #     # msg: "{{ lookup('file', item.path + '/TARGET') }}"
  #     # msg: "src: {{ src }};   dest: {{ dotfiles_dest.results[1].stdout_lines[0] }}"
  #     msg: "src: {{ src }} - {{ dest }}"
  #   with_together:
  #     - "{{ dotfiles_list.files }}"
  #     - "{{ dotfiles_dest.results }}"
  #   loop_control:
  #     label: "{{ item.0.path, item.1.stdout_lines[0] }}"
  #   tags: dotfiles


  # stow
  # - name: Installing stow
  #   apt:
  #     name: stow
  #   tags:
  #     - dotfiles
  #     - stow
  #
  # - name: Stow dotfiles
  #   shell: cd $HOME/.dotfiles && ./ubuntu
  #   tags:
  #     - dotfiles
  #     - stow

